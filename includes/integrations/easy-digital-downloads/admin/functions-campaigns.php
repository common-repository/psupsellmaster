<?php
/**
 * Integrations - Easy Digital Downloads - Admin - Functions - Campaigns.
 *
 * @package PsUpsellMaster.
 */

// Exit if accessed directly.
if ( ! defined( 'ABSPATH' ) ) {
	exit;
}

/**
 * Save a coupon for Easy Digital Downloads.
 *
 * @param array $args The coupon args.
 */
function psupsellmaster_edd_save_coupon( $args ) {
	// Get the coupon id.
	$coupon_id = isset( $args['coupon_id'] ) ? filter_var( $args['coupon_id'], FILTER_VALIDATE_INT ) : false;
	$coupon_id = false !== $coupon_id ? $coupon_id : 0;

	// Set the data.
	$data = array(
		'code'              => '',
		'name'              => __( 'Auto-generated by UpsellMaster', 'psupsellmaster' ),
		'description'       => '',
		'status'            => 'inactive',
		'scope'             => 'not_global',
		'amount_type'       => 'percent',
		'amount'            => '',
		'start_date'        => '',
		'end_date'          => '',
		'product_condition' => 'any',
		'excluded_products' => '',
		'product_reqs'      => '',
		'categories'        => '',
		'term_condition'    => '',
		'max_uses'          => '',
		'use_count'         => '',
		'once_per_customer' => '',
		'min_charge_amount' => '',
	);

	// Check if the code is not empty.
	if ( ! empty( $args['code'] ) ) {
		// Set the code.
		$data['code'] = $args['code'];
	}

	// Set the edd statuses.
	$edd_statuses = psupsellmaster_edd_get_coupon_statuses();

	// Check if the status is not empty.
	if ( ! empty( $args['status'] ) ) {
		// Check if the status is valid.
		if ( in_array( $args['status'], $edd_statuses, true ) ) {
			// Set the status.
			$data['status'] = $args['status'];
		}
	}

	// Set the edd types.
	$edd_types = array(
		'flat',
		'percent',
	);

	// Check if the type is not empty.
	if ( ! empty( $args['type'] ) ) {
		// Set the type.
		$type = 'percent';

		// Check if the type is a valid edd type.
		if ( in_array( $args['type'], $edd_types, true ) ) {
			// Set the type.
			$type = $args['type'];

			// Otherwise, check if the type is valid.
		} elseif ( 'discount_fixed' === $args['type'] ) {
			// Set the type.
			$type = 'flat';
		}

		// Set the type.
		$data['amount_type'] = $type;
	}

	// Check if the amount is not empty.
	if ( ! empty( $args['amount'] ) ) {
		// Get the amount.
		$amount = filter_var( $args['amount'], FILTER_VALIDATE_FLOAT );

		// Check if the amount is valid.
		if ( false !== $amount ) {
			// Set the amount.
			$data['amount'] = $args['amount'];
		}
	}

	// Remove the filter to prevent EDD core from storing product requirements.
	remove_filter( 'edd_get_discount_product_reqs', 'psupsellmaster_edd_get_discount_product_reqs' );

	// Check if the coupon id is empty.
	if ( empty( $coupon_id ) ) {
		// Save the coupon.
		$coupon_id = edd_add_discount( $data );

		// Otherwise...
	} else {
		// Save the coupon.
		edd_update_discount( $coupon_id, $data );
	}

	// Restore the filter.
	add_filter( 'edd_get_discount_product_reqs', 'psupsellmaster_edd_get_discount_product_reqs', 10, 2 );

	// Return the coupon id.
	return $coupon_id;
}

/**
 * Delete a coupon in Easy Digital Downloads.
 *
 * @param int $coupon_id The coupon id.
 */
function psupsellmaster_edd_delete_coupon( $coupon_id ) {
	// Delete the coupon.
	edd_delete_discount( $coupon_id );
}

/**
 * Duplicate a coupon in Easy Digital Downloads.
 *
 * @param array $args The coupon args.
 * @return int The duplicate id.
 */
function psupsellmaster_edd_duplicate_coupon( $args ) {
	// Set the duplicate id.
	$duplicate_id = false;

	// Get the coupon id.
	$coupon_id = isset( $args['coupon_id'] ) ? filter_var( $args['coupon_id'], FILTER_VALIDATE_INT ) : false;

	// Check if the coupon id is empty.
	if ( empty( $coupon_id ) ) {
		// Return the duplicate id.
		return $duplicate_id;
	}

	// Get the discount.
	$discount = edd_get_discount( $coupon_id );

	// Get the code.
	$code = isset( $args['code'] ) ? $args['code'] : '';

	// Set the args.
	$args = array(
		'code'        => $code,
		'amount_type' => $discount->get_type(),
		'amount'      => $discount->get_amount(),
	);

	// Save the coupon.
	$duplicate_id = psupsellmaster_edd_save_coupon( $args );

	// Return the duplicate id.
	return $duplicate_id;
}

/**
 * Redirect the integrated coupon edit page to the campaign edit page in Easy Digital Downloads.
 */
function psupsellmaster_edd_maybe_redirect_integrated_coupon() {
	// Get the coupon id.
	$coupon_id = isset( $_GET['discount'] ) ? filter_var( sanitize_text_field( wp_unslash( $_GET['discount'] ) ), FILTER_VALIDATE_INT ) : false;

	// Check if the coupon id is empty.
	if ( empty( $coupon_id ) ) {
		return false;
	}

	// Set the known actions.
	$known_actions = array(
		'archive_discount',
		'activate_discount',
		'deactivate_discount',
		'delete_discount',
		'edit_discount',
	);

	// Get the action.
	$action = isset( $_GET['edd-action'] ) ? sanitize_text_field( wp_unslash( $_GET['edd-action'] ) ) : false;

	// Check the action.
	if ( ! in_array( $action, $known_actions, true ) ) {
		return false;
	}

	// Get the campaign id.
	$campaign_id = psupsellmaster_get_campaign_id_by_coupon_id( $coupon_id );

	// Check if the campaign id is empty.
	if ( empty( $campaign_id ) ) {
		return false;
	}

	// Redirect to the campaign edit page.
	wp_safe_redirect( admin_url( 'admin.php?page=psupsellmaster-campaigns&view=edit&campaign=' . $campaign_id ) );
	exit;
}
